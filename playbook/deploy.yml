---
- name: Deploy NextJS site
  hosts: "{{ hosts }}"
  vars:
    home_dir: "/home/{{ ansible_user }}"
    project_dir: "/home/{{ ansible_user }}/wyrd-site"
    nginx_file: "./nginx.j2"
    app_link_file: "{{ app_link_file}}"
    dest_app_link_file: /usr/share/assetlinks.json

  tasks:
    # - name: Pull latest commit
    #   ansible.builtin.git:
    #     repo: "git@github.com:{{ github_repo }}.git"
    #     dest: "{{ project_dir }}"
    #     version: "{{ branch }}"
    #     # key_file: /home/azureuser/.ssh/id_rsa
    #     tags: [git]
    # - name: Install repo dependencies
    #   command: "chdir={{ project_dir }} npm install"
    #   tags: [npm, git]
    # - name: Build NextJS site
    #   command: "chdir={{ project_dir }} npm run build"
    #   tags: [npm, git]
    # - name: Start NextJS site
    #   command: "chdir={{ project_dir }} pm2 start npm --name "wyrd-site" -- start"
    #   tags: [npm, git]
    # - name: Save pm2 process
    #   command: pm2 save && pm2 startup
    #   tags: [npm, git]
    - name: Setup app link assets json
      become: yes
      copy:
        src: "{{ app_link_file }}"
        dest: "{{ dest_app_link_file}}"
      when: app_link_file != None
      tags: [app_links]
    - name: Install nginx script
      become: yes
      template:
        src: "{{ nginx_file }}"
        dest: /etc/nginx/sites-available/wyrd.live
        mode: 700
      vars:
        hostname: wyrd.live
        subdomains:
          - "{{ ansible_host }}"
      tags:
        - nginx
    - name: Symlink nginx file
      become: yes
      file:
        src: /etc/nginx/sites-available/wyrd.live
        dest: /etc/nginx/sites-enabled/default
        state: link
        force: yes
      tags:
        - nginx
    - name: Start and enable nginx service
      become: yes
      service:
        name: nginx
        state: reloaded
        enabled: true
      tags:
        - nginx
    - name: Linux Firewall setup ssh rule
      become: yes
      community.general.ufw:
        rule: "allow"
        port: ssh
        proto: tcp
        state: "enabled"
      tags: [firewall]
    - name: Allow firewall for nginx
      become: yes
      community.general.ufw:
        rule: "allow"
        name: "Nginx Full"
        state: "enabled"
      tags: [firewall]
